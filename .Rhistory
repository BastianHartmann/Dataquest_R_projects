5+8
5L
library("tidyr", lib.loc="C:/ProgramData/Anaconda3/envs/rstudio/lib/R/library")
detach("package:tidyr", unload=TRUE)
library(readr)
library(ggplot2)
library(ggplot2)
library(r-ggplot2)
library(tidyverse)
x = [1,2,3]
x = (1,2,3)
x = list(1,2,3)
mean(x)
x <- [1,2,3]
x <- (1,2,3)
x <- c(1,2,3)
mean(x)
median(x)
stderr(x)
standardise_aes_names()
sd(x)
vals <- c(88.92,86.14,58.26,69.19)
mean(vals)
median(vals)
sd(x)
library(help = "stats")
sd(vals)
library(help = "base")
plot(cars)
setwd("C:/Users/Bastian/FH M端nchen/Promotion/R/RStudio/Dataquest")
plot(cars)
rmarkdown::render("UTF8")
rmarkdown::render(input = $file, encoding= "UTF-8")
rmarkdown::render(input = COVID_19_Trends, encoding= "UTF-8")
rmarkdown::render(input = "COVID_19_Trends", encoding= "UTF-8")
rmarkdown::render(input = "COVID_19_Trends.Rmd", encoding= "UTF-8")
rmarkdown::render(input = "COVID_19_Trends.Rmd", encoding= "UTF-8")
setwd("C:/Users/Bastian/FH M端nchen/Promotion/R/RStudio/Dataquest")
clear
setwd("C:/Users/Bastian/FH M端nchen/Promotion/R/RStudio/Dataquest")
rmarkdown::render(input = "COVID_19_Trends.Rmd", encoding= "Windows-1251")
setwd("C:/Users/Bastian/FH M端nchen/Promotion/R/RStudio/Dataquest")
rmarkdown::render(input = "COVID_19_Trends.Rmd", encoding= "ISO 8859-16")
setwd("C:/Users/Bastian/Desktop/Temp_RStudio")
dim(covid_df)
library(tidyverse)
# Loading the dataset
covid_df = read.csv("scources/covid19.csv")
dim(covid_df)
# Displaing the dimension of the data:
dim(covid_df)
# Storing the column names in a variable
vector_cols <- colnames(covid_df)
# Displaing the variable vector_cols
vector_cols
# Showing the first few rows of the dataset
head(covid_df)
# Showing a global view of the dataset.
glimpse(covid_dfds)
# Displaing the dimension of the data:
dim(covid_df)
# Storing the column names in a variable
vector_cols <- colnames(covid_df)
# Displaing the variable vector_cols
vector_cols
# Showing the first few rows of the dataset
head(covid_df)
# Showing a global view of the dataset.
glimpse(covid_df)
library(readr)
# Loading the dataset
covid_df = read.csv("scources/covid19.csv")
# Displaing the dimension of the data:
dim(covid_df)
# Storing the column names in a variable
vector_cols <- colnames(covid_df)
# Displaing the variable vector_cols
vector_cols
# Showing the first few rows of the dataset
head(covid_df)
# Showing a global view of the dataset.
library(tibble)
glimpse(covid_df)
View(covid_df)
covid_df_all_states <- covid_df %>% filter(Country_Region="All States") %>% select(-Country_Region)
covid_df_all_states <- covid_df %>% filter(Country_Region == "All States") %>% select(-Country_Region)
View(covid_df_all_states)
covid_df_all_states <- covid_df %>% filter(Province_State == "All States") %>% select(-Province_State)
View(covid_df_all_states)
covid_df_all_states_daily <- covid_df_all_states %>% select(Date, Country_Region, active, hospitalizedCurr, daily_tested, daily_positive)
# Data glimpse
head(covid_df_all_states_daily)
covid_df_all_states <- covid_df %>% filter(Province_State == "All States") %>% select(-Province_State)
# Data glimpse
head(covid_df_all_states)
View(covid_df_all_states_daily)
covid_df_all_states_daily_sum <- covid_df_all_states_daily %>% group_by(Country_Region) %>% summarize(tested=sum(daily_tested), positive=sum(daily_positive), active=sum(active), hospitalized=sum(hospitalizedCurr)) %>% arrange(-tested)
# Visualisation of generated dataframe:
covid_df_all_states_daily_sum
covid_top_10 <- covid_df_all_states_daily_sum %>% head(10)
View(covid_top_10)
# extract vectors
countries <- covid_top_10$Country_Region
tested_cases <- covid_top_10$tested
positive_cases  <- covid_top_10$positive
active_cases  <- covid_top_10$active
hospitalized_cases  <- covid_top_10$hospitalized
# name the values of the vectors
name(tested_cases) <- countries
# extract vectors
countries <- covid_top_10$Country_Region
tested_cases <- covid_top_10$tested
positive_cases  <- covid_top_10$positive
active_cases  <- covid_top_10$active
hospitalized_cases  <- covid_top_10$hospitalized
# name the values of the vectors
names(tested_cases) <- countries
names(positive_cases) <- countries
names(active_cases) <- countries
names(hospitalized_cases) <- countries
positive_cases
countries
positive_against_tested = positve_cases / tested_cases
positive_against_tested <- positve_cases / tested_cases
# extract vectors
countries <- covid_top_10$Country_Region
tested_cases <- covid_top_10$tested
positive_cases  <- covid_top_10$positive
active_cases  <- covid_top_10$active
hospitalized_cases  <- covid_top_10$hospitalized
# name the values of the vectors
names(tested_cases) <- countries
names(positive_cases) <- countries
names(active_cases) <- countries
names(hospitalized_cases) <- countries
positive_against_tested <- positve_cases / tested_cases
positive_against_tested <- positive_cases / tested_cases
positive_against_tested
positive_against_tested <- positive_cases / tested_cases
sort(positive_against_tested)
positive_against_tested
positive_against_tested <- positive_cases / tested_cases
sort(-positive_against_tested)
positive_against_tested
positive_against_tested <- positive_cases / tested_cases
sort(-positive_against_tested)
positive_against_tested
positive_against_tested <- positive_cases / tested_cases
positive_against_tested_sorted <- sort(-positive_against_tested)
positive_agianst_tested_sorted
positive_against_tested <- positive_cases / tested_cases
positive_against_tested_sorted <- sort(-positive_against_tested)
positive_against_tested_sorted
positive_against_tested <- positive_cases / tested_cases
positive_against_tested_sorted <- sort(positive_against_tested)
positive_against_tested_sorted
positive_against_tested <- positive_cases / tested_cases
positive_against_tested_sorted <- sort(positive_against_tested, decreasing= TRUE)
positive_against_tested_sorted
positive_against_tested <- positive_cases / tested_cases
positive_against_tested_sorted <- sort(positive_against_tested, decreasing= TRUE)
positive_tested_top_3 <- positive_against_tested_sorted[1:3]
positive_against_tested <- positive_cases / tested_cases
positive_against_tested_sorted <- sort(positive_against_tested, decreasing= TRUE)
positive_tested_top_3 <- positive_against_tested_sorted[1:3]
positive_tested_top_3
positive_tested_top_3
# creating country vectors
united_kingdom <- c(0.11, 1473672, 166909, 0, 0)
united_states <- c(0.10, 17282363, 1877179, 0, 0)
turkey <- c(0.08, 2031192, 163941, 2980960, 0)
# creating matrix from vectors
covid_mat <- rbind(united_kingdom,united_states,turkey)
colnames(covid_mat) <- c("Ratio", "tested", "positive", "active", "hospitalized")
covid_mat
# Create a character variable that contains our question
question <- "Which countries have had the highest number of positive cases against the number of tests?"
# Create a character variable that contains our answer
answer <- c("Positive tested cases" = positive_tested_top_3)
# Create lists that contain the data structures we created
dataframe_list <- list(original = covid_df,
allstates = covid_df_all_states,
daily = covid_df_all_states_daily,
top_10 = covid_top_10)
matrix_list <- list(covid_mat)
vector_list <- list(vector_cols,countries)
# Create a named list that contains the three previous lists associated with the data structure names
data_structure_list <- list("dataframe" = dataframe_list,
"matrix" = matrix_list,
"vector" = vector_list)
View(data_structure_list)
# Create a character variable that contains our question
question <- "Which countries have had the highest number of positive cases against the number of tests?"
# Create a character variable that contains our answer
answer <- c("Positive tested cases" = positive_tested_top_3)
# Create lists that contain the data structures we created
dataframe_list <- list(original = covid_df,
allstates = covid_df_all_states,
daily = covid_df_all_states_daily,
top_10 = covid_top_10)
matrix_list <- list(covid_mat)
vector_list <- list(vector_cols,countries)
# Create a named list that contains the three previous lists associated with the data structure names
data_structure_list <- list("dataframe" = dataframe_list,
"matrix" = matrix_list,
"vector" = vector_list)
# Create a list that summarizes our results
covid_analysis_list <- list(question,answer,data_structure_list)
# Display the second element
covid_analysis_list[[2]]
